{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst BACKEND_URL = 'http://127.0.0.1:3001';\nexport function useSpotifyData() {\n  _s();\n  const [profile, setProfile] = useState(null);\n  const [loadingProfile, setLoadingProfile] = useState(false);\n  const [topArtists, setTopArtists] = useState([]);\n  const [loadingArtists, setLoadingArtists] = useState(false);\n  const [error, setError] = useState('');\n  const loadProfile = () => {\n    setLoadingProfile(true);\n    fetch(`${BACKEND_URL}/api/spotify/profile`, {\n      credentials: 'include'\n    }).then(res => {\n      if (!res.ok) throw new Error('Failed to fetch profile');\n      return res.json();\n    }).then(data => {\n      setProfile(data);\n      setError('');\n    }).catch(() => setError('Failed to load profile')).finally(() => setLoadingProfile(false));\n  };\n  const loadTopArtists = () => {\n    setLoadingArtists(true);\n    fetch(`${BACKEND_URL}/api/top-artists`, {\n      credentials: 'include'\n    }).then(res => {\n      if (!res.ok) throw new Error('Failed to fetch top artists');\n      return res.json();\n    }).then(data => {\n      setTopArtists(data);\n      setError('');\n    }).catch(() => setError('Failed to load top artists')).finally(() => setLoadingArtists(false));\n  };\n  return {\n    profile,\n    loadingProfile,\n    topArtists,\n    loadingArtists,\n    error,\n    loadProfile,\n    loadTopArtists\n  };\n}\n_s(useSpotifyData, \"TY1qXRxqbY1jRfzbdS+cNN5XneE=\");","map":{"version":3,"names":["useState","BACKEND_URL","useSpotifyData","_s","profile","setProfile","loadingProfile","setLoadingProfile","topArtists","setTopArtists","loadingArtists","setLoadingArtists","error","setError","loadProfile","fetch","credentials","then","res","ok","Error","json","data","catch","finally","loadTopArtists"],"sources":["/Users/chrishorn/Documents/coding/spotify-openai-app/frontend/src/hooks/useSpotifyData.js"],"sourcesContent":["import { useState } from 'react';\n\nconst BACKEND_URL = 'http://127.0.0.1:3001';\n\nexport function useSpotifyData() {\n  const [profile, setProfile] = useState(null);\n  const [loadingProfile, setLoadingProfile] = useState(false);\n\n  const [topArtists, setTopArtists] = useState([]);\n  const [loadingArtists, setLoadingArtists] = useState(false);\n\n  const [error, setError] = useState('');\n\n  const loadProfile = () => {\n    setLoadingProfile(true);\n    fetch(`${BACKEND_URL}/api/spotify/profile`, { credentials: 'include' })\n      .then(res => {\n        if (!res.ok) throw new Error('Failed to fetch profile');\n        return res.json();\n      })\n      .then(data => {\n        setProfile(data);\n        setError('');\n      })\n      .catch(() => setError('Failed to load profile'))\n      .finally(() => setLoadingProfile(false));\n  };\n\n  const loadTopArtists = () => {\n    setLoadingArtists(true);\n    fetch(`${BACKEND_URL}/api/top-artists`, { credentials: 'include' })\n      .then(res => {\n        if (!res.ok) throw new Error('Failed to fetch top artists');\n        return res.json();\n      })\n      .then(data => {\n        setTopArtists(data);\n        setError('');\n      })\n      .catch(() => setError('Failed to load top artists'))\n      .finally(() => setLoadingArtists(false));\n  };\n\n  return {\n    profile,\n    loadingProfile,\n    topArtists,\n    loadingArtists,\n    error,\n    loadProfile,\n    loadTopArtists,\n  };\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,WAAW,GAAG,uBAAuB;AAE3C,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBP,iBAAiB,CAAC,IAAI,CAAC;IACvBQ,KAAK,CAAC,GAAGd,WAAW,sBAAsB,EAAE;MAAEe,WAAW,EAAE;IAAU,CAAC,CAAC,CACpEC,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MACvD,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZjB,UAAU,CAACiB,IAAI,CAAC;MAChBT,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,CACDU,KAAK,CAAC,MAAMV,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAC/CW,OAAO,CAAC,MAAMjB,iBAAiB,CAAC,KAAK,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IAC3Bd,iBAAiB,CAAC,IAAI,CAAC;IACvBI,KAAK,CAAC,GAAGd,WAAW,kBAAkB,EAAE;MAAEe,WAAW,EAAE;IAAU,CAAC,CAAC,CAChEC,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZb,aAAa,CAACa,IAAI,CAAC;MACnBT,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,CACDU,KAAK,CAAC,MAAMV,QAAQ,CAAC,4BAA4B,CAAC,CAAC,CACnDW,OAAO,CAAC,MAAMb,iBAAiB,CAAC,KAAK,CAAC,CAAC;EAC5C,CAAC;EAED,OAAO;IACLP,OAAO;IACPE,cAAc;IACdE,UAAU;IACVE,cAAc;IACdE,KAAK;IACLE,WAAW;IACXW;EACF,CAAC;AACH;AAACtB,EAAA,CAhDeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}